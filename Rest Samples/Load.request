<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>baseURL</key>
	<string>http://localhost:3000/load/engine</string>
	<key>followRedirect</key>
	<true/>
	<key>handleJSONPCallbacks</key>
	<false/>
	<key>headers</key>
	<array/>
	<key>httpMethod</key>
	<string>GET</string>
	<key>jsonpScript</key>
	<string></string>
	<key>paramBodyUIChoice</key>
	<integer>0</integer>
	<key>parameters</key>
	<array>
		<dict>
			<key>inUse</key>
			<true/>
			<key>parameter</key>
			<string>rules</string>
			<key>value</key>
			<string>{
    "rules": [
        {
            "name": "Eligible",
            "code": "var result = undefined;    result = bom.DecisionTable_.Eligible",
            "behaviour": "Normal"
        },
        {
            "name": "DecisionTable_",
            "code": "var result = undefined;    result = (function() {\n\n        var result = {};\n        var evaluate = function(value) {\n            var r1_ = value &amp;&amp; (value.call || value) &amp;&amp; (value.call &amp;&amp; value.call());\n            return r1_ === undefined ? value : r1_;\n        }\n\n        var column0Condition = true;\n        column0Condition = column0Condition &amp;&amp; function() {\n            var result = undefined;\n            result = bom.Age &lt; 19;\n            return result\n        }();\n\n        var column1Condition = true;\n        column1Condition = column1Condition &amp;&amp; function() {\n            var result = undefined;\n            result = (18 &lt; bom.Age) &amp;&amp; (bom.Age &lt; 21);\n            return result\n        }();\n\n        var column2Condition = true;\n        column2Condition = column2Condition &amp;&amp; function() {\n            var result = undefined;\n            result = bom.Age &gt; 20;\n            return result\n        }();\n\n        var row0Condition = true;\n\n        row0Condition = row0Condition &amp;&amp; function() {\n            var result = undefined;\n            result = bom.Gender === 'Female';\n            return result\n        }();\n\n        var row1Condition = true;\n\n        row1Condition = row1Condition &amp;&amp; function() {\n            var result = undefined;\n            result = bom.Gender === 'Male';\n            return result\n        }();\n\n        if (row0Condition &amp;&amp; column0Condition) {\n            result.Match = {\n                Column: {\n                    Index: 0,\n                    Name: \"Younger than 19\"\n                },\n                Row: {\n                    Index: 0,\n                    Name: \"Women\"\n                }\n            };\n\n            var cellEligible = void 0;\n            cellEligible = evaluate(void 0);\n\n            if (cellEligible === void 0) {\n                var column = function() {\n                    var result = undefined;\n                    result = true;\n                    return result\n                };\n                cellEligible = evaluate(column);\n            }\n\n            if (cellEligible === void 0) {\n                var column = function() {\n                    var result = undefined;\n                    result = false;\n                    return result\n                };\n                cellEligible = evaluate(column);\n            }\n\n            if (cellEligible === void 0) {\n                //raw=false\n                var table = function() {\n                    var result = undefined;\n                    result = undefined;\n                    return result\n                };\n                cellEligible = evaluate(table);\n            }\n            result[\"Eligible\"] = cellEligible;\n        } else\n\n        if (row1Condition &amp;&amp; column0Condition) {\n            result.Match = {\n                Column: {\n                    Index: 0,\n                    Name: \"Younger than 19\"\n                },\n                Row: {\n                    Index: 1,\n                    Name: \"Men\"\n                }\n            };\n\n            var cellEligible = void 0;\n            cellEligible = evaluate(void 0);\n\n            if (cellEligible === void 0) {\n                var column = function() {\n                    var result = undefined;\n                    result = false;\n                    return result\n                };\n                cellEligible = evaluate(column);\n            }\n\n            if (cellEligible === void 0) {\n                //raw=false\n                var table = function() {\n                    var result = undefined;\n                    result = undefined;\n                    return result\n                };\n                cellEligible = evaluate(table);\n            }\n            result[\"Eligible\"] = cellEligible;\n        } else\n\n        if (row0Condition &amp;&amp; column1Condition) {\n            result.Match = {\n                Column: {\n                    Index: 1,\n                    Name: \"19-20\"\n                },\n                Row: {\n                    Index: 0,\n                    Name: \"Women\"\n                }\n            };\n\n            var cellEligible = function() {\n                var result = undefined;\n                result = true;\n                return result\n            };\n            cellEligible = evaluate(function() {\n                var result = undefined;\n                result = true;\n                return result\n            });\n\n            if (cellEligible === void 0) {\n                var column = function() {\n                    var result = undefined;\n                    result = true;\n                    return result\n                };\n                cellEligible = evaluate(column);\n            }\n\n            if (cellEligible === void 0) {\n                //raw=false\n                var table = function() {\n                    var result = undefined;\n                    result = undefined;\n                    return result\n                };\n                cellEligible = evaluate(table);\n            }\n            result[\"Eligible\"] = cellEligible;\n        } else\n\n        if (row1Condition &amp;&amp; column1Condition) {\n            result.Match = {\n                Column: {\n                    Index: 1,\n                    Name: \"19-20\"\n                },\n                Row: {\n                    Index: 1,\n                    Name: \"Men\"\n                }\n            };\n\n            var cellEligible = function() {\n                var result = undefined;\n                result = false;\n                return result\n            };\n            cellEligible = evaluate(function() {\n                var result = undefined;\n                result = false;\n                return result\n            });\n\n            if (cellEligible === void 0) {\n                //raw=false\n                var table = function() {\n                    var result = undefined;\n                    result = undefined;\n                    return result\n                };\n                cellEligible = evaluate(table);\n            }\n            result[\"Eligible\"] = cellEligible;\n        } else\n\n        if (row0Condition &amp;&amp; column2Condition) {\n            result.Match = {\n                Column: {\n                    Index: 2,\n                    Name: \"Older than 20\"\n                },\n                Row: {\n                    Index: 0,\n                    Name: \"Women\"\n                }\n            };\n\n            var cellEligible = void 0;\n            cellEligible = evaluate(void 0);\n\n            if (cellEligible === void 0) {\n                var column = function() {\n                    var result = undefined;\n                    result = true;\n                    return result\n                };\n                cellEligible = evaluate(column);\n            }\n\n            if (cellEligible === void 0) {\n                var column = function() {\n                    var result = undefined;\n                    result = true;\n                    return result\n                };\n                cellEligible = evaluate(column);\n            }\n\n            if (cellEligible === void 0) {\n                //raw=false\n                var table = function() {\n                    var result = undefined;\n                    result = undefined;\n                    return result\n                };\n                cellEligible = evaluate(table);\n            }\n            result[\"Eligible\"] = cellEligible;\n        } else\n\n        if (row1Condition &amp;&amp; column2Condition) {\n            result.Match = {\n                Column: {\n                    Index: 2,\n                    Name: \"Older than 20\"\n                },\n                Row: {\n                    Index: 1,\n                    Name: \"Men\"\n                }\n            };\n\n            var cellEligible = void 0;\n            cellEligible = evaluate(void 0);\n\n            if (cellEligible === void 0) {\n                var column = function() {\n                    var result = undefined;\n                    result = true;\n                    return result\n                };\n                cellEligible = evaluate(column);\n            }\n\n            if (cellEligible === void 0) {\n                //raw=false\n                var table = function() {\n                    var result = undefined;\n                    result = undefined;\n                    return result\n                };\n                cellEligible = evaluate(table);\n            }\n            result[\"Eligible\"] = cellEligible;\n        } else {\n\n            result.Match = {\n                NoMatch: true\n            };\n            var tableEligible = function() {\n                var result = undefined;\n                result = undefined;\n                return result\n            };\n            result[\"Eligible\"] = evaluate(tableEligible);\n        }\n        result.TableName = \"OfAge\";\n        result.Purpose = \"Unknown\";\n\n        return result;\n    })()",
            "behaviour": "Normal"
        }
    ],
    "Version": "0.2.0.draft",
    "Id": "OfAge",
    "SchemaVersion": "5c710a33da262dd9fea17e2b438ae5a9",
    "error": {}
}</string>
		</dict>
	</array>
	<key>parametersType</key>
	<integer>0</integer>
	<key>presentBeforeChallenge</key>
	<false/>
	<key>stringEncoding</key>
	<integer>4</integer>
	<key>usingHTTPBody</key>
	<false/>
</dict>
</plist>
